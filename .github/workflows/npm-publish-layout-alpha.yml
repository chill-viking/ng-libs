name: npm-publish-layout-alpha
on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
    paths:
      - libs/layout/**

permissions: read-all

env:
  NX_PROJECT: 'layout'
  PROJECT_PATH: 'libs/layout'

jobs:
  #  prepare-version:
  publish-lib:
    name: publish alpha @chill-viking/layout
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: actions/checkout@v3
        name: 'Checkout code'

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
        with:
          path: ${{ env.PROJECT_PATH }}

      - name: Bump Major for Alpha Version
        id: bumped-version
        run: |
          a=${{ steps.package-version.outputs.current-version }}
          v=(${a//\./ })
          x=${v[0]}
          major=$(($x + 1))
          minor=${v[1]}
          patch=${v[2]}
          newVersion="$major.$minor.$patch"
          echo "version=${newVersion}" >> $GITHUB_OUTPUT

      - name: Cache Build Number
        id: build-number
        uses: actions/cache@v3
        with:
          path: tmp
          key: alpha-runs-${{ env.NX_PROJECT }}-${{ steps.bumped-version.outputs.version }}
          restore-keys: alpha-runs-${{ env.NX_PROJECT }}-${{ steps.bumped-version.outputs.version }}

      - name: Create initial Build
        if: steps.build-number.outputs.cache-hit != 'true'
        run: |
          mkdir tmp
          echo ${{ github.run_number }} > tmp/runs

      - name: Increment Build
        id: increment-build
        run: |
          z=$(<tmp/runs)
          x=$((${{ github.run_number }} - $z))
          y=$(($x + 1))
          echo "build=${y}" >> $GITHUB_OUTPUT

      - name: Create Alpha Version
        id: alpha-version
        run: |
          newVersion=${{ steps.bumped-version.outputs.version }}
          num=${{ steps.increment-build.outputs.build }}
          echo "version=${newVersion}-alpha.${num}" >> $GITHUB_OUTPUT

      - uses: ./actions/run-npm-publish
        name: Publish to NPM
        with:
          npm-auth-token: ${{ secrets.ORG_NPM_TOKEN }}
          project-name: ${{ env.NX_PROJECT }}
          project-location: ${{ env.PROJECT_PATH }}
          project-dist-location: dist/${{ env.PROJECT_PATH }}
          project-version: ${{ steps.alpha-version.outputs.version }}
          project-tag: 'alpha'
